---
AWSTemplateFormatVersion: 2010-09-09
Description: Create infrastructure for automated notification.



##RESOURCES##

Resources:
#Creating a role for lambda function
  Lambdarole1:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns: 
      - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      - arn:aws:iam::aws:policy/AmazonSNSFullAccess
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      RoleName: Lambdarole1
#Creating a SNS topic
  LambdaTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: LambdaTopic
      TopicName: lambdatopic
#Subscribing to the SNS topic with my EMAIL ID.
  MyEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref LambdaTopic
      Protocol: email
      Endpoint: tjdetwill007@gmail.com
#Creating the Lambda Function with the python runtime.
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties: 
      FunctionName: MyLambdaFunction
      Handler: index.lambda_handler
      Runtime: python3.9
      Code:
        ZipFile: |
          import boto3
          import os
          import urllib.parse
          def lambda_handler(event, context):
              print(event)
              bucket_name=event['Records'][0]['s3']['bucket']['name']
              key=event['Records'][0]['s3']['object']['key']
              objectKey=urllib.parse.unquote_plus(key)
              s3 = boto3.client('s3')
              client_sns=boto3.client('sns')
              snsArn = os.environ.get("sns_Arn")



              try:
                  msg="A new File uploaded named {textFileName} in your bucket "+bucket_name
                  file_body = s3.get_object(Bucket=bucket_name, Key=objectKey)
                  file_content=file_body["Body"].read().decode('utf-8')
                  msg=msg.format(textFileName=objectKey)
                  client_sns.publish(
                  TopicArn = snsArn,
                  Message = msg,
                  Subject='Notification for new a new upload on bucket'
              )

              except Exception as e:
                  print(e)
                  print('Error getting object {} from bucket {}. Make sure they exist and your bucket is in the same region as this function.'.format(objectKey, bucket_name))
                  raise e

      Environment:
        Variables:
          sns_Arn: !Ref LambdaTopic
          
      Role: !GetAtt Lambdarole1.Arn
#Adding permissions for s3 bucket in lambda permission
  S3InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaFunction.Arn
      Action: lambda:InvokeFunction      
      Principal: s3.amazonaws.com
      SourceArn: arn:aws:s3:::s3automate123321
#Creating a bucket with the notification configuration that will trigger the lambda function
  mybucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: s3automate123321
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:Put'
            Function: !GetAtt LambdaFunction.Arn  
#If you add any other resources please be assure about the dependency of each resources with other ressources to  avoid Validation ERROR.     
#Please edit this yaml file resource name and attributes as per your environment.  